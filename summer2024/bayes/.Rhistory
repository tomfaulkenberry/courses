# Example: w = 0.75, N = 20 trials, probability of 12 successes? 9 successes?
choose(20,12) * (0.75)^(12) * (0.25)^8
choose(20,9) * (0.75)^(9) * (0.25)^11
# R has a built-in function for this!
dbinom(x=12, size=20, prob=0.85)
# R has a built-in function for this!
dbinom(x=12, size=20, prob=0.75)
# plot "probability density function"
x = seq(from=0, to=20, by=1)
# plot "probability density function"
x = seq(from=0, to=20, by=1)
barplot(dbinom(x, size=20, prob=0.75), # change to 0.30 to see effect
names.arg = 0:20,
xlab="Data x",
ylab="P(x)")
barplot(dbinom(x, size=20, prob=0.35), # change to 0.35 to see effect
names.arg = 0:20,
xlab="Data x",
ylab="P(x)")
w = seq(from=0, to=1, by=0.01)
plot(w, dbinom(x=9, size=20, prob=w),
type="l",
ylab="Likelihood")
barplot(dbinom(x, size=20, prob=0.5), # change to 0.5 to reflect null
names.arg = 0:20,
xlab="Data x",
ylab="P(x)")
pbinom(13, size=20, prob=0.5)
pbinom(14, size=20, prob=0.5)
1-pbinom(14, size=20, prob=0.5)
binom.test(x = 15, alternative="greater")
binom.test(x=15, n=20, p=0.5)
binom.test(x=15, n=20, p=0.5, alternative="g")
plot(w, dbinom(x=15, size=20, prob=w),
type="l",
ylab="Likelihood")
# you'll notice that it peaks at 15/20 = 0.75
abline(v=0.75)
x = seq(from=0, to=20, by=1)
barplot(dbinom(x, size=20, prob=0.5), # change to 0.5 to reflect null
names.arg = 0:20,
xlab="Data x",
ylab="P(x)")
1 - pbinom(14, size=20, prob=0.5)
binom.test(x=15, n=20, p=0.5, alternative="greater")
binom.test(x=9, n=20, p=0.5, alternative="greater")
# Example: w = 0.25, N = 10 trials, probability of 7 successes?
choose(10,7) * (0.25)^7 * (0.75)^3
# R has a built-in function for this!
dbinom(x=7, size=10, prob=0.25)
